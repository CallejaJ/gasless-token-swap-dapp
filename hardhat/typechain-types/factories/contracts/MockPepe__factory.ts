/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MockPepe, MockPepeInterface } from "../../contracts/MockPepe";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FaucetUsed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "FAUCET_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FAUCET_COOLDOWN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "faucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getFaucetCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastFaucetTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5033604051806040016040528060098152602001684d6f636b205065706560b81b815250604051806040016040528060048152602001635045504560e01b815250816003908162000063919062000336565b50600462000072828262000336565b5050506001600160a01b038116620000a557604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000b081620000ce565b50620000c8336a084595161401484a00000062000120565b6200042a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200014c5760405163ec442f0560e01b8152600060048201526024016200009c565b6200015a600083836200015e565b5050565b6001600160a01b0383166200018d57806002600082825462000181919062000402565b90915550620002019050565b6001600160a01b03831660009081526020819052604090205481811015620001e25760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016200009c565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166200021f576002805482900390556200023e565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200028491815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002bc57607f821691505b602082108103620002dd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200033157600081815260208120601f850160051c810160208610156200030c5750805b601f850160051c820191505b818110156200032d5782815560010162000318565b5050505b505050565b81516001600160401b0381111562000352576200035262000291565b6200036a81620003638454620002a7565b84620002e3565b602080601f831160018114620003a25760008415620003895750858301515b600019600386901b1c1916600185901b1785556200032d565b600085815260208120601f198616915b82811015620003d357888601518255948401946001909101908401620003b2565b5085821015620003f25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200042457634e487b7160e01b600052601160045260246000fd5b92915050565b610a8f806200043a6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80637bc1f6cc116100a2578063a9059cbb11610071578063a9059cbb14610234578063dd62ed3e14610247578063dd7b49f914610280578063de5f72fd14610293578063f2fde38b1461029b57600080fd5b80637bc1f6cc146101e75780637d1d5d19146102075780638da5cb5b1461021157806395d89b411461022c57600080fd5b8063313ce567116100e9578063313ce5671461018157806340c10f191461019057806370a08231146101a5578063715018a6146101ce57806376697640146101d657600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102ae565b60405161013091906108c5565b60405180910390f35b61014c61014736600461092f565b610340565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c366004610959565b61035a565b60405160128152602001610130565b6101a361019e36600461092f565b61037e565b005b6101606101b3366004610995565b6001600160a01b031660009081526020819052604090205490565b6101a3610394565b61016069021e19e0c9bab240000081565b6101606101f5366004610995565b60066020526000908152604090205481565b6101606201518081565b6005546040516001600160a01b039091168152602001610130565b6101236103a8565b61014c61024236600461092f565b6103b7565b6101606102553660046109b0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61016061028e366004610995565b6103c5565b6101a3610411565b6101a36102a9366004610995565b6104e3565b6060600380546102bd906109e3565b80601f01602080910402602001604051908101604052809291908181526020018280546102e9906109e3565b80156103365780601f1061030b57610100808354040283529160200191610336565b820191906000526020600020905b81548152906001019060200180831161031957829003601f168201915b5050505050905090565b60003361034e818585610521565b60019150505b92915050565b600033610368858285610533565b6103738585856105b2565b506001949350505050565b610386610611565b610390828261063e565b5050565b61039c610611565b6103a66000610674565b565b6060600480546102bd906109e3565b60003361034e8185856105b2565b6001600160a01b03811660009081526006602052604081205481906103ee906201518090610a33565b90508042106104005750600092915050565b61040a4282610a46565b9392505050565b3360009081526006602052604090205461042f906201518090610a33565b42101561047c5760405162461bcd60e51b815260206004820152601660248201527546617563657420636f6f6c646f776e2061637469766560501b60448201526064015b60405180910390fd5b3360008181526006602052604090204290556104a29069021e19e0c9bab240000061063e565b60405169021e19e0c9bab2400000815233907fc471df7d13ab46c73ec6eb2da0f35f84077f20d50243ba09a714b82cffc54de99060200160405180910390a2565b6104eb610611565b6001600160a01b03811661051557604051631e4fbdf760e01b815260006004820152602401610473565b61051e81610674565b50565b61052e83838360016106c6565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156105ac578181101561059d57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610473565b6105ac848484840360006106c6565b50505050565b6001600160a01b0383166105dc57604051634b637e8f60e11b815260006004820152602401610473565b6001600160a01b0382166106065760405163ec442f0560e01b815260006004820152602401610473565b61052e83838361079b565b6005546001600160a01b031633146103a65760405163118cdaa760e01b8152336004820152602401610473565b6001600160a01b0382166106685760405163ec442f0560e01b815260006004820152602401610473565b6103906000838361079b565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166106f05760405163e602df0560e01b815260006004820152602401610473565b6001600160a01b03831661071a57604051634a1406b160e11b815260006004820152602401610473565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156105ac57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161078d91815260200190565b60405180910390a350505050565b6001600160a01b0383166107c65780600260008282546107bb9190610a33565b909155506108389050565b6001600160a01b038316600090815260208190526040902054818110156108195760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610473565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661085457600280548290039055610873565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108b891815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156108f2578581018301518582016040015282016108d6565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461092a57600080fd5b919050565b6000806040838503121561094257600080fd5b61094b83610913565b946020939093013593505050565b60008060006060848603121561096e57600080fd5b61097784610913565b925061098560208501610913565b9150604084013590509250925092565b6000602082840312156109a757600080fd5b61040a82610913565b600080604083850312156109c357600080fd5b6109cc83610913565b91506109da60208401610913565b90509250929050565b600181811c908216806109f757607f821691505b602082108103610a1757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561035457610354610a1d565b8181038181111561035457610354610a1d56fea26469706673582212202928bb6157c19fcef55fd8308c26f393964b52ee122eca609d5ce0483de9b40564736f6c63430008140033";

type MockPepeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPepeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPepe__factory extends ContractFactory {
  constructor(...args: MockPepeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockPepe & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockPepe__factory {
    return super.connect(runner) as MockPepe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPepeInterface {
    return new Interface(_abi) as MockPepeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockPepe {
    return new Contract(address, _abi, runner) as unknown as MockPepe;
  }
}
